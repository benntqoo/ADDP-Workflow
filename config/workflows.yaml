# Claude Code Agents - Workflow Definitions
# This file defines complex multi-agent workflows for common development tasks

workflows:
  # Feature Development Workflow
  feature_development:
    description: "Complete feature development from design to deployment"
    phases:
      - name: "Requirements Analysis"
        agents:
          - jenny-validator  # Validate requirements completeness
          - karen-realist   # Realistic timeline assessment
        mode: parallel
        duration: 30m
        
      - name: "Architecture Design"
        agents:
          - system-architect
          - database-architect
          - api-designer
        mode: collaborative
        duration: 1h
        outputs:
          - architecture_diagram
          - api_specification
          - database_schema
          
      - name: "Implementation"
        parallel_tracks:
          backend:
            condition: "has_backend_changes"
            agents:
              - $auto  # Auto-select based on language
              - database-expert
            files: ["api/*", "services/*", "models/*"]
            
          frontend:
            condition: "has_frontend_changes"
            agents:
              - $auto  # Auto-select based on framework
              - ui-designer
            files: ["components/*", "pages/*", "styles/*"]
            
          mobile:
            condition: "has_mobile_changes"
            agents:
              - android-kotlin-architect
              - ios-native-architect
            files: ["mobile/*", "shared/*"]
        duration: 4h
        
      - name: "Testing"
        agents:
          - test-automator  # Generate tests
          - jenny-validator # Validate implementation
        mode: sequential
        duration: 1h
        coverage_target: 80
        
      - name: "Review & Optimization"
        agents:
          - code-reviewer
          - security-auditor
          - performance-optimizer
        mode: parallel
        duration: 1h
        
      - name: "Documentation"
        agents:
          - doc-maintainer
          - api-documenter
        mode: parallel
        duration: 30m
        
    final_review:
      agent: karen-realist
      message: "Final reality check before deployment"

  # Bug Fix Workflow
  bug_fix:
    description: "Rapid bug identification and resolution"
    phases:
      - name: "Bug Analysis"
        agents:
          - debug-specialist
          - $language_expert  # Based on affected files
        mode: collaborative
        duration: 30m
        outputs:
          - root_cause_analysis
          - affected_components
          
      - name: "Fix Implementation"
        agents:
          - $language_expert
        mode: single
        duration: 1h
        
      - name: "Regression Testing"
        agents:
          - test-automator
          - jenny-validator
        mode: parallel
        duration: 30m
        requirements:
          - regression_test
          - edge_case_test
          
      - name: "Code Review"
        agents:
          - code-reviewer
          - security-auditor  # If security-related
        mode: sequential
        duration: 15m

  # Performance Optimization Workflow
  performance_optimization:
    description: "Systematic performance improvement"
    phases:
      - name: "Performance Profiling"
        agents:
          - performance-optimizer
          - database-architect  # For query optimization
        mode: parallel
        duration: 1h
        tools:
          - profiler
          - query_analyzer
          - load_tester
          
      - name: "Bottleneck Analysis"
        agents:
          - performance-optimizer
          - system-architect
        mode: collaborative
        duration: 30m
        outputs:
          - bottleneck_report
          - optimization_plan
          
      - name: "Optimization Implementation"
        parallel_tracks:
          code_optimization:
            agents:
              - $language_expert
              - performance-optimizer
            targets:
              - algorithm_optimization
              - memory_optimization
              - cache_implementation
              
          database_optimization:
            agents:
              - database-architect
              - sql-expert
            targets:
              - query_optimization
              - index_creation
              - denormalization
              
          frontend_optimization:
            agents:
              - frontend-optimizer
              - react-nextjs-expert  # Or vue-expert based on stack
            targets:
              - bundle_size_reduction
              - lazy_loading
              - render_optimization
        duration: 3h
        
      - name: "Performance Validation"
        agents:
          - performance-optimizer
          - test-automator
        mode: sequential
        duration: 30m
        success_criteria:
          - response_time: "<100ms"
          - throughput: ">1000rps"
          - memory_usage: "<500MB"

  # Security Audit Workflow
  security_audit:
    description: "Comprehensive security review and hardening"
    phases:
      - name: "Vulnerability Scanning"
        agents:
          - security-auditor
          - dependency-scanner
        mode: parallel
        duration: 30m
        
      - name: "Code Security Review"
        agents:
          - security-auditor
          - $language_expert
        mode: collaborative
        duration: 1h
        checks:
          - sql_injection
          - xss_vulnerabilities
          - authentication_flaws
          - authorization_issues
          - sensitive_data_exposure
          
      - name: "Penetration Testing"
        agents:
          - penetration-tester
          - api-security-tester
        mode: parallel
        duration: 2h
        
      - name: "Security Fixes"
        agents:
          - security-auditor
          - $language_expert
        mode: collaborative
        duration: 2h
        
      - name: "Validation"
        agents:
          - security-auditor
          - jenny-validator
        mode: sequential
        duration: 30m

  # Code Refactoring Workflow
  refactoring:
    description: "Systematic code improvement without changing functionality"
    phases:
      - name: "Code Analysis"
        agents:
          - code-reviewer
          - $language_expert
          - architecture-reviewer
        mode: parallel
        duration: 30m
        analysis_targets:
          - code_smells
          - design_patterns
          - coupling_cohesion
          - technical_debt
          
      - name: "Refactoring Plan"
        agents:
          - system-architect
          - karen-realist
        mode: collaborative
        duration: 30m
        outputs:
          - refactoring_roadmap
          - risk_assessment
          
      - name: "Test Coverage"
        agents:
          - test-automator
        mode: single
        duration: 1h
        requirement: "Ensure tests before refactoring"
        
      - name: "Refactoring Implementation"
        agents:
          - $language_expert
          - code-reviewer
        mode: iterative
        duration: 3h
        strategies:
          - extract_method
          - rename_variables
          - simplify_conditionals
          - remove_duplication
          
      - name: "Validation"
        agents:
          - test-automator
          - jenny-validator
          - performance-optimizer
        mode: parallel
        duration: 30m
        ensure:
          - all_tests_pass
          - no_functionality_change
          - no_performance_regression

  # API Development Workflow
  api_development:
    description: "REST/GraphQL API development"
    phases:
      - name: "API Design"
        agents:
          - api-designer
          - system-architect
        mode: collaborative
        duration: 1h
        outputs:
          - openapi_spec
          - graphql_schema
          
      - name: "Implementation"
        agents:
          - $backend_expert
          - database-architect
        mode: collaborative
        duration: 3h
        
      - name: "API Testing"
        agents:
          - api-tester
          - test-automator
        mode: parallel
        duration: 1h
        test_types:
          - unit_tests
          - integration_tests
          - contract_tests
          - load_tests
          
      - name: "Documentation"
        agents:
          - api-documenter
          - doc-maintainer
        mode: parallel
        duration: 30m
        outputs:
          - api_documentation
          - postman_collection
          - client_examples

  # Database Migration Workflow
  database_migration:
    description: "Safe database schema and data migration"
    phases:
      - name: "Migration Planning"
        agents:
          - database-architect
          - karen-realist
        mode: collaborative
        duration: 1h
        outputs:
          - migration_plan
          - rollback_strategy
          
      - name: "Migration Scripts"
        agents:
          - database-architect
          - sql-expert
        mode: collaborative
        duration: 2h
        scripts:
          - schema_migration
          - data_migration
          - index_updates
          
      - name: "Testing"
        agents:
          - database-tester
          - jenny-validator
        mode: sequential
        duration: 1h
        environments:
          - dev
          - staging
          
      - name: "Performance Validation"
        agents:
          - database-architect
          - performance-optimizer
        mode: parallel
        duration: 30m
        
      - name: "Deployment Preparation"
        agents:
          - devops-engineer
          - database-architect
        mode: collaborative
        duration: 30m
        checklist:
          - backup_verified
          - rollback_tested
          - downtime_window_scheduled

  # Mobile App Development Workflow
  mobile_app_development:
    description: "Cross-platform mobile app development"
    phases:
      - name: "Platform Analysis"
        agents:
          - android-kotlin-architect
          - ios-native-architect
          - flutter-cross-platform  # If using Flutter
        mode: parallel
        duration: 30m
        
      - name: "Shared Code Design"
        agents:
          - kotlin-multiplatform-expert
          - system-architect
        mode: collaborative
        duration: 1h
        
      - name: "Platform Implementation"
        parallel_tracks:
          android:
            agents:
              - android-kotlin-architect
            duration: 4h
            
          ios:
            agents:
              - ios-native-architect
            duration: 4h
            
          shared:
            agents:
              - kotlin-multiplatform-expert
            duration: 3h
            
      - name: "UI/UX Implementation"
        agents:
          - android-kotlin-architect  # For Compose
          - ios-native-architect      # For SwiftUI
          - ui-designer
        mode: collaborative
        duration: 3h
        
      - name: "Testing"
        agents:
          - mobile-tester
          - test-automator
        mode: parallel
        duration: 2h
        test_types:
          - unit_tests
          - ui_tests
          - integration_tests
          - device_tests

  # Machine Learning Pipeline Workflow
  ml_pipeline:
    description: "End-to-end ML model development"
    phases:
      - name: "Data Analysis"
        agents:
          - data-scientist
          - python-ml-specialist
        mode: collaborative
        duration: 2h
        
      - name: "Feature Engineering"
        agents:
          - python-ml-specialist
          - data-engineer
        mode: collaborative
        duration: 2h
        
      - name: "Model Development"
        agents:
          - python-ml-specialist
          - ml-engineer
        mode: iterative
        duration: 4h
        tasks:
          - model_selection
          - hyperparameter_tuning
          - cross_validation
          
      - name: "Model Evaluation"
        agents:
          - python-ml-specialist
          - data-scientist
        mode: collaborative
        duration: 1h
        
      - name: "Deployment Preparation"
        agents:
          - mlops-engineer
          - python-ml-specialist
        mode: collaborative
        duration: 2h
        outputs:
          - model_artifact
          - serving_pipeline
          - monitoring_setup

# Workflow Triggers
workflow_triggers:
  # Automatic workflow selection based on task
  task_patterns:
    "implement .* feature":
      workflow: feature_development
      
    "fix .* bug|issue|problem":
      workflow: bug_fix
      
    "optimize .* performance|speed":
      workflow: performance_optimization
      
    "security .* audit|review":
      workflow: security_audit
      
    "refactor .*":
      workflow: refactoring
      
    "create .* api|endpoint":
      workflow: api_development
      
    "migrate .* database|schema":
      workflow: database_migration
      
    "develop .* mobile|app":
      workflow: mobile_app_development
      
    "train .* model|ml|machine learning":
      workflow: ml_pipeline

# Workflow Configuration
workflow_config:
  # Default settings for all workflows
  defaults:
    max_parallel_agents: 5
    timeout: 8h
    auto_rollback: true
    progress_reporting: true
    
  # Notification settings
  notifications:
    on_phase_complete: true
    on_workflow_complete: true
    on_error: true
    on_conflict: true
    
  # Quality gates
  quality_gates:
    test_coverage: 80
    code_review_approval: required
    security_scan_pass: required
    performance_regression: block