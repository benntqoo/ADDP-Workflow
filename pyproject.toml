[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "universal-ai-coding-framework"
version = "1.0.0"
description = "Universal AI Coding Framework based on MCP + Ollama + ADDP"
authors = [
    {name = "Universal AI Coding Framework Team"}
]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.8"
keywords = ["ai", "coding", "mcp", "ollama", "addp", "collaboration"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Tools",
    "Topic :: Artificial Intelligence",
]

dependencies = [
    "mcp>=1.0.0",
    "aiohttp>=3.9.0",
    "pathlib2>=2.3.7",
    "python-dateutil>=2.8.2",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "mypy>=1.5.0",
]

[project.urls]
Homepage = "https://github.com/your-org/universal-ai-coding-framework"
Repository = "https://github.com/your-org/universal-ai-coding-framework.git"
Documentation = "https://docs.universal-ai-coding.org"
"Bug Tracker" = "https://github.com/your-org/universal-ai-coding-framework/issues"

[project.scripts]
mcp-server = "src.mcp_server.server:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["src*"]

[tool.black]
line-length = 100
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q"
testpaths = [
    "tests",
    "src",
]
asyncio_mode = "auto"